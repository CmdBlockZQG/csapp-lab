                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f40003000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f65802000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f72002000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
0x032: 30f00000000000000000 | 	irmovq $0, %rax
0x03c: c0f2fcffffffffffffff | 	iaddq $-4, %rdx
0x046: 703a01000000000000   | 	jmp cnd
0x04f:                      | loop:
0x04f: 50170000000000000000 | 	mrmovq (%rdi), %rcx
0x059: 50870800000000000000 | 	mrmovq 8(%rdi), %r8
0x063: 50971000000000000000 | 	mrmovq 16(%rdi), %r9
0x06d: 50a71800000000000000 | 	mrmovq 24(%rdi), %r10
0x077: 50b72000000000000000 | 	mrmovq 32(%rdi), %r11
0x081: c0f72800000000000000 | 	iaddq $40, %rdi
0x08b: c0f62800000000000000 | 	iaddq $40, %rsi
0x095: 4016d8ffffffffffffff | 	rmmovq %rcx, -40(%rsi)
0x09f: 4086e0ffffffffffffff | 	rmmovq %r8, -32(%rsi)
0x0a9: 4096e8ffffffffffffff | 	rmmovq %r9, -24(%rsi)
0x0b3: 40a6f0ffffffffffffff | 	rmmovq %r10, -16(%rsi)
0x0bd: 40b6f8ffffffffffffff | 	rmmovq %r11, -8(%rsi)
                            | 
0x0c7: 6211                 | 	andq %rcx, %rcx
0x0c9: 71dc00000000000000   | 	jle np1
0x0d2: c0f00100000000000000 | 	iaddq $1, %rax
0x0dc:                      | np1:
                            | 
0x0dc: 6288                 | 	andq %r8, %r8
0x0de: 71f100000000000000   | 	jle np2
0x0e7: c0f00100000000000000 | 	iaddq $1, %rax
0x0f1:                      | np2:
                            | 
0x0f1: 6299                 | 	andq %r9, %r9
0x0f3: 710601000000000000   | 	jle np3
0x0fc: c0f00100000000000000 | 	iaddq $1, %rax
0x106:                      | np3:
                            | 
0x106: 62aa                 | 	andq %r10, %r10
0x108: 711b01000000000000   | 	jle np4
0x111: c0f00100000000000000 | 	iaddq $1, %rax
0x11b:                      | np4:
                            | 
0x11b: 62bb                 | 	andq %r11, %r11
0x11d: 713001000000000000   | 	jle np5
0x126: c0f00100000000000000 | 	iaddq $1, %rax
0x130:                      | np5:
                            | 
0x130: c0f2fbffffffffffffff | 	iaddq $-5, %rdx
0x13a:                      | cnd:
0x13a: 764f00000000000000   | 	jg loop
0x143: c0f20300000000000000 | 	iaddq $3, %rdx
0x14d: 721f02000000000000   | 	jl Done
0x156: 73f601000000000000   | 	je lf1
                            | 
0x15f: 50170800000000000000 | 	mrmovq 8(%rdi), %rcx
0x169: 40160800000000000000 | 	rmmovq %rcx, 8(%rsi)
0x173: 6211                 | 	andq %rcx, %rcx
0x175: 718801000000000000   | 	jle lf2d
0x17e: c0f00100000000000000 | 	iaddq $1, %rax
0x188:                      | lf2d:
0x188: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x192: 72f601000000000000   | 	jl lf1
0x19b: 73cd01000000000000   | 	je lf3
                            | 
0x1a4: 50171800000000000000 | 	mrmovq 24(%rdi), %rcx
0x1ae: 40161800000000000000 | 	rmmovq %rcx, 24(%rsi)
0x1b8: 6211                 | 	andq %rcx, %rcx
0x1ba: 71cd01000000000000   | 	jle lf3
0x1c3: c0f00100000000000000 | 	iaddq $1, %rax
0x1cd:                      | lf3:
0x1cd: 50171000000000000000 | 	mrmovq 16(%rdi), %rcx
0x1d7: 40161000000000000000 | 	rmmovq %rcx, 16(%rsi)
0x1e1: 6211                 | 	andq %rcx, %rcx
0x1e3: 71f601000000000000   | 	jle lf1
0x1ec: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x1f6:                      | lf1:
0x1f6: 50170000000000000000 | 	mrmovq (%rdi), %rcx
0x200: 40160000000000000000 | 	rmmovq %rcx, (%rsi)
0x20a: 6211                 | 	andq %rcx, %rcx
0x20c: 711f02000000000000   | 	jle Done
0x215: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x21f:                      | Done:
0x21f: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x220:                      | End:
                            | #/* $end ncopy-ys */
0x220:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x220:                      | 	.align 8
0x220:                      | src:
0x220: ffffffffffffffff     | 	.quad -1
0x228: feffffffffffffff     | 	.quad -2
0x230: 0300000000000000     | 	.quad 3
0x238: 0400000000000000     | 	.quad 4
0x240: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x250:                      | 	.align 16
0x250:                      | Predest:
0x250: fadebc0000000000     | 	.quad 0xbcdefa
0x258:                      | dest:
0x258: abefcd0000000000     | 	.quad 0xcdefab
0x260: abefcd0000000000     | 	.quad 0xcdefab
0x268: abefcd0000000000     | 	.quad 0xcdefab
0x270: abefcd0000000000     | 	.quad 0xcdefab
0x278:                      | Postdest:
0x278: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x280:                      | .align 8
                            | # Run time stack
0x280: 0000000000000000     | 	.quad 0
0x288: 0000000000000000     | 	.quad 0
0x290: 0000000000000000     | 	.quad 0
0x298: 0000000000000000     | 	.quad 0
0x2a0: 0000000000000000     | 	.quad 0
0x2a8: 0000000000000000     | 	.quad 0
0x2b0: 0000000000000000     | 	.quad 0
0x2b8: 0000000000000000     | 	.quad 0
0x2c0: 0000000000000000     | 	.quad 0
0x2c8: 0000000000000000     | 	.quad 0
0x2d0: 0000000000000000     | 	.quad 0
0x2d8: 0000000000000000     | 	.quad 0
0x2e0: 0000000000000000     | 	.quad 0
0x2e8: 0000000000000000     | 	.quad 0
0x2f0: 0000000000000000     | 	.quad 0
0x2f8: 0000000000000000     | 	.quad 0
                            | 
0x300:                      | Stack:
