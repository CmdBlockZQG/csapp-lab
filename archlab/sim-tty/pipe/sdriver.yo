                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4d001000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f62801000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7f000000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
0x032: 30f00000000000000000 | 	irmovq $0, %rax
0x03c: 30f80100000000000000 |     irmovq $1, %r8
0x046: 6288                 |     andq %r8, %r8
0x048: c0f2ffffffffffffffff |     iaddq $-1, %rdx
0x052: 70b900000000000000   | 	jmp cnd
0x05b:                      | loop:
0x05b: 50170000000000000000 | 	mrmovq (%rdi), %rcx
0x065: 50870800000000000000 |     mrmovq 8(%rdi), %r8
0x06f: c0f71000000000000000 |     iaddq $16, %rdi
0x079: 40160000000000000000 |     rmmovq %rcx, (%rsi)
0x083: 40860800000000000000 |     rmmovq %r8, 8(%rsi)
0x08d: c0f61000000000000000 |     iaddq $16, %rsi
                            |     
0x097: 6211                 |     andq %rcx, %rcx
0x099: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x0a3: 6288                 |     andq %r8, %r8
0x0a5: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x0af: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x0b9:                      | cnd:
0x0b9: 765b00000000000000   | 	jg loop
                            | 
0x0c2: 74eb00000000000000   |     jne Done
0x0cb: 50170000000000000000 |     mrmovq (%rdi), %rcx
0x0d5: 40160000000000000000 |     rmmovq %rcx, (%rsi)
0x0df: 6211                 |     andq %rcx, %rcx
0x0e1: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x0eb:                      | Done:
0x0eb: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x0ec:                      | End:
                            | #/* $end ncopy-ys */
0x0ec:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x0f0:                      | 	.align 8
0x0f0:                      | src:
0x0f0: 0100000000000000     | 	.quad 1
0x0f8: 0200000000000000     | 	.quad 2
0x100: fdffffffffffffff     | 	.quad -3
0x108: fcffffffffffffff     | 	.quad -4
0x110: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x120:                      | 	.align 16
0x120:                      | Predest:
0x120: fadebc0000000000     | 	.quad 0xbcdefa
0x128:                      | dest:
0x128: abefcd0000000000     | 	.quad 0xcdefab
0x130: abefcd0000000000     | 	.quad 0xcdefab
0x138: abefcd0000000000     | 	.quad 0xcdefab
0x140: abefcd0000000000     | 	.quad 0xcdefab
0x148:                      | Postdest:
0x148: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x150:                      | .align 8
                            | # Run time stack
0x150: 0000000000000000     | 	.quad 0
0x158: 0000000000000000     | 	.quad 0
0x160: 0000000000000000     | 	.quad 0
0x168: 0000000000000000     | 	.quad 0
0x170: 0000000000000000     | 	.quad 0
0x178: 0000000000000000     | 	.quad 0
0x180: 0000000000000000     | 	.quad 0
0x188: 0000000000000000     | 	.quad 0
0x190: 0000000000000000     | 	.quad 0
0x198: 0000000000000000     | 	.quad 0
0x1a0: 0000000000000000     | 	.quad 0
0x1a8: 0000000000000000     | 	.quad 0
0x1b0: 0000000000000000     | 	.quad 0
0x1b8: 0000000000000000     | 	.quad 0
0x1c0: 0000000000000000     | 	.quad 0
0x1c8: 0000000000000000     | 	.quad 0
                            | 
0x1d0:                      | Stack:
